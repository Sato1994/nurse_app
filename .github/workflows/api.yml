# お試し

name: Ruby

on: [push]

jobs:
  test:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
          MYSQL_USER: user1
          MYSQL_PASSWORD: user1_pass
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    # databaseにログインして起動確認 ###############################################################
    # - uses: actions/checkout@v2

    # - name: mysql --protocol=tcp login and show databases
    #   run: mysql --protocol=tcp -h  localhost  -P 3306 -u user1 -puser1_pass -e "SHOW DATABASES"
    ################################################################################################
      - uses: actions/checkout@v2
      - name: pwd
        run: pwd
      - name: cat
        run: cat Gemfile
      - name: set up ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.1
      - name: install apt e.g
        env:
          DATABASE_URL: mysql://user1:user1_pass@localhost:3306/test
          RAILS_ENV: test
          MYSQL_USER: user1
          MYSQL_PASSWORD: user1_pass
        run: |
          apt-get update -qq
          apt-get install -y build-essential libpq-dev nodejs
          rm -rf /var/lib/apt/lists/*

          
      

    # - name: Set up Ruby
    #   uses: ruby/setup-ruby@ec106b438a1ff6ff109590de34ddc62c540232e0
    #   with:
    #     ruby-version: 2.7.1

    # - name: Setup Database
    #   env:
    #     RAILS_ENV: test
    #   run: |
    #     cp config/database.ci.yml config/database.yml
    #     ./bin/rails db:create
    #     ./bin/rails db:migrate
    # - name: Run tests
    #   run: ./bin/rspec








# # github 公式が出してるやつ
# name: "Ruby on Rails CI"
# on: [push]
# jobs:
#   test:
#     runs-on: ubuntu-latest
#     # defaults:
#     #   run:
#     #     working-directory: api
#     services:
#       mysql:
#         image: mysql:5.7
#         ports:
#           - "3306:3306"
#         env:
#           MYSQL_ROOT_PASSWORD: password
#           MYSQL_DB: app_test
#           MYSQL_USER: satosato
#           MYSQL_PASSWORD: passpass
#     env:
#       RAILS_ENV: test
#       DATABASE_URL: "mysql://satosato:passpass@localhost:3306/app_test"

#     steps:
#       - name: Show Docker containers
#         run: docker ps -a
#       - name: Show databases for satosato
#         run: |
#           sudo /etc/init.d/mysql start
#           mysql -h localhost -P 3306 -u satosato -passpass -e "SHOW DATABASES"
    # steps:
    #   - name: Checkout code
    #     uses: actions/checkout@v2
    #   # Add or replace dependency steps here
    #   - name: Install Ruby and gems
    #     uses: ruby/setup-ruby@8f312efe1262fb463d906e9bf040319394c18d3e # v1.92
    #     with:
    #       bundler-cache: true
    #       ruby-version: '2.7.1'
    #   # Add or replace database setup steps here
    #   - name: Set up database schema
    #     run: bin/rails db:schema:load
    #   # Add or replace test runners here
    #   - name: Run tests
    #     run: bin/rake


# docker-compose 使用 ######################################################################3
# name: CI
# on: [push]
# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2

#     - name: build
#       shell: bash
#       env:
#         MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
#       run:
#         docker-compose build

#     # - name: up
#     #   shell: bash
#     #   env:
#     #     MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
#     #   run: |
#     #     docker-compose up -d

#     - name: sleep
#       shell: bash
#       run: |
#         sleep 30

#     - name: db:create
#       shell: bash
#       env:
#         MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
#       run: |
#         docker-compose run web rails db:create

#     - name: Run RSpec
#       shell: bash
#       env:
#         RAILS_ENV: test
#       run:  |
#         docker-compose run web rspec

#     # - name: Run Jest
#     #   shell: bash
#     #   run: |
#     #     docker-compose exec -T front yarn test